// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: query_users.sql

package sqlc

import (
	"context"
)

const listUsers = `-- name: ListUsers :many

select id, name, email, created_at, updated_at from full_example.users
order by created_at desc
`

// User management queries
func (q *Queries) ListUsers(ctx context.Context) ([]FullExampleUser, error) {
	rows, err := q.db.Query(ctx, listUsers)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []FullExampleUser
	for rows.Next() {
		var i FullExampleUser
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Email,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
